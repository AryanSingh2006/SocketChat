<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>chat</title>
</head>

<body>
  <link rel="stylesheet" href="/public/css/chat.css">
  <div id="divUserList">
    <script src="/socket.io/socket.io.js"></script>
    <h1>Users</h1>
    <ul id="userList"></ul>
  </div>
  <div id="chatSection">
    <h2>Chat with <span id="chatWithUser"></span></h2>
    <div id="messageArea">messages</div>
    <form id="messageForm">
      <input type="text" id="messageBar">
      <button type="submit">Send</button>
    </form>
  </div>
  <form action="/logout" , method="POST">
    <a href="/logout"><button>logout</button></a>
  </form>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    // connects to the server
    const socket = io();

    //sending the logged in user id to the socket.js to map 
    const loggedInUser = "<%= loggedInUserId %>"
    socket.emit('addUser', loggedInUser);

    //real time chatting
    socket.on("receiveMessage", (message) => {
      console.log("ðŸ“¥ New message received:", message);
      const messageContainer = document.getElementById("messageArea"); // Changed to match your div ID
      
      // Create message div with proper styling
      const messageDiv = document.createElement('div');
      messageDiv.classList.add('message');
      
      // Add 'own' class if message is from current user
      if (message.senderId === loggedInUser) {
        messageDiv.classList.add('own');
      }

      // Create avatar
      const avatar = document.createElement('div');
      avatar.classList.add('avatar');
      avatar.textContent = message.senderId === loggedInUser ? 'Y' : 'T'; // You/Them initial

      // Create content
      const content = document.createElement('div');
      content.classList.add('content');
      content.textContent = message.text;

      // Assemble message
      messageDiv.appendChild(avatar);
      messageDiv.appendChild(content);
      messageContainer.appendChild(messageDiv);

      // Scroll to bottom
      messageContainer.scrollTop = messageContainer.scrollHeight;
    });

  </script>
  <script src="/public/js/chat.js"></script>
</body>


</html>